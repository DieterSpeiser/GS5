= form_tag(destroy_multiple_sip_account_call_histories_path(@sip_account), :method => :delete, :id => 'call_history_form') do
  %header.entries-nav= render :partial => "call_histories/navigation"
  .content
    %table
      - reset_cycle
      - for call_history in call_histories
        - phone_number = call_history.display_number
        - voicemail_message = call_history.voicemail_message
        - if phone_number
          - phone_book_entry = call_history.phone_book_entry_by_number(phone_number)
        %tr.call-history-entry{:class => cycle('odd', 'even')}
          %td.select_box= check_box_tag("selected_ids[]", call_history.id, false, :id => "select_item_#{call_history.id}", :class => 'select_item')
          %td.thumbnail
            - image = call_history.display_image(:small, phone_book_entry)
            - if image
              = image_tag(image, :itemprop => 'image')
          %td.time
            - if voicemail_message
              .voicemail-message
                %a{:href => sip_account_voicemail_messages_path(@sip_account, :anchor => "message_#{voicemail_message.id}")}
                  = image_tag('icons/gs_envelope_16x.png', :class => 'display') 
                = call_history.display_call_date(t("call_histories.index.date_format"), t("call_histories.index.date_today_format"))
            - elsif call_history.entry_type == 'forwarded'
              .call-forwarded= call_history.display_call_date(t("call_histories.index.date_format"), t("call_histories.index.date_today_format"))
              - if call_history.callee_account_type.to_s.downcase == 'voicemail'
                = t("call_histories.index.voicemail")
              - else
                = call_history.destination_number
            - elsif call_history.entry_type == 'dialed'
              .call-placed= call_history.display_call_date(t("call_histories.index.date_format"), t("call_histories.index.date_today_format"))
            - elsif call_history.entry_type == 'received'
              .call-received= call_history.display_call_date(t("call_histories.index.date_format"), t("call_histories.index.date_today_format"))
            - elsif call_history.entry_type == 'missed'
              .call-missed= call_history.display_call_date(t("call_histories.index.date_format"), t("call_histories.index.date_today_format"))
            - else 
              .call-unknown
              = t("call_histories.index.#{call_history.entry_type}")
              = call_history.display_call_date(t("call_histories.index.date_format"), t("call_histories.index.date_today_format"))
            - if call_history.forwarding_service && call_history.entry_type != 'forwarded'
              = t("call_histories.index.forwarded_by")
              = call_history.display_auth_account_name
          %td.user
            - display_name = call_history.display_name
            - if display_name.blank?
              - display_name = phone_book_entry.to_s
            - if phone_book_entry
              %a.name{:href => phone_book_phone_book_entry_path(phone_book_entry.phone_book, phone_book_entry), :itemprop => "name"}= display_name
            - else
              .name= display_name
            .phone= phone_number
          %td.status
            - if call_history.display_duration
              .duration= call_history.display_duration
            - else
              .disposition= t("call_histories.call_results.#{call_history.result}")
          %td.actions
            - if @sip_account.registration && can?(:call, call_history)
              = link_to t('call_histories.index.actions.call'), call_sip_account_call_history_path(@sip_account, call_history), :method => :put
          %td.actions
            - if can? :destroy, call_history
              = link_to t('call_histories.index.actions.destroy'), sip_account_call_history_path(@sip_account, call_history), :method => :delete

  %footer.entries-nav= render :partial => "call_histories/navigation"
  = image_submit_tag('icons/cross-16x.png', :confirm => t("call_histories.index.actions.confirm_selected"))
  = t("call_histories.index.actions.destroy_multiple")
